#!/bin/bash

clear

# Colors
RED='\033[0;31m'
GRN='\033[0;32m'
CYN='\033[0;36m'
YEL='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${YEL}"
cat << "EOF"
__________    ________ 
          _____                            _____          
         /\    \                          /\    \         
        /::\    \                        /::\    \        
       /::::\    \                      /::::\    \       
      /::::::\    \                    /::::::\    \      
     /:::/\:::\    \                  /:::/\:::\    \     
    /:::/__\:::\    \                /:::/  \:::\    \    
   /::::\   \:::\    \              /:::/    \:::\    \   
  /::::::\   \:::\    \            /:::/    / \:::\    \  
 /:::/\:::\   \:::\____\          /:::/    /   \:::\ ___\ 
/:::/  \:::\   \:::|    |        /:::/____/  ___\:::|    |
\::/   |::::\  /:::|____|        \:::\    \ /\  /:::|____|
 \/____|:::::\/:::/    /          \:::\    /::\ \::/    / 
       |:::::::::/    /            \:::\   \:::\ \/____/  
       |::|\::::/    /              \:::\   \:::\____\    
       |::| \::/____/                \:::\  /:::/    /    
       |::|  ~|                       \:::\/:::/    /     
       |::|   |                        \::::::/    /      
       \::|   |                         \::::/    /       
        \:|   |                          \::/____/        
         \|___|                                        
EOF
echo -e "${NC}"

echo -ne "${GRN}ðŸ”¥ Please Subscribe \n"
for i in {1..3}; do
  echo -ne "${CYN}Subscribing To RasINGamerZ"
  for dot in {1..3}; do
    echo -n "."
    sleep 0.3
  done
  echo -ne "\r                     \r"
done
echo -e "${GRN} Thanks for Subscribing! If Not Do It Rn${NC}\n"
sleep 1

echo -e "${YEL}X-> Installing Docker Compose...${NC}"
apt update && apt upgrade -y
apt install docker-compose -y

#!/bin/bash

apt -y install software-properties-common curl apt-transport-https ca-certificates gnupg lsb-release

LC_ALL=C.UTF-8 add-apt-repository -y ppa:ondrej/php

# redis.io repo - works for Debian & Ubuntu
curl -fsSL https://packages.redis.io/gpg | sudo gpg --dearmor -o /usr/share/keyrings/redis-archive-keyring.gpg
echo "deb [signed-by=/usr/share/keyrings/redis-archive-keyring.gpg] https://packages.redis.io/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/redis.list

# DONE 

#!/bin/bash

apt update
apt -y install php8.1 php8.1-{cli,gd,mysql,pdo,mbstring,tokenizer,bcmath,xml,fpm,curl,zip} mariadb-server nginx tar unzip git redis
curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer

echo -e "${CYN}X-> Setting up JEXACTYL Panel directories...${NC}"
mkdir -p /var/www/jexactyl
cd /var/www/jexactyl|| exit

echo -e "${CYN}X-> DOWNLOADING PANEL...${NC}"

curl -Lo panel.tar.gz https://github.com/jexactyl/jexactyl/releases/latest/download/panel.tar.gz
tar -xzvf panel.tar.gz
chmod -R 755 storage/* bootstrap/cache/

echo -e "${CYN}X-> database setup...${NC}"

mysql -u root -p

echo -e "${CYN}X-> Create configuration file...${NC}"

cp .env.example .env


echo -e "${CYN}X-> Install Composer packages...${NC}"

composer install --no-dev --optimize-autoloader


echo -e "${CYN}X-> gen a key...${NC}"

php artisan key:generate --force

echo -e "${CYN}X-> Setup user and panel...${NC}"

php artisan p:environment:setup

echo -e "${CYN}X-> Setup database...${NC}"

php artisan p:environment:database

echo -e "${CYN}X-> Starting database...${NC}"

php artisan migrate --seed --force

echo -e "${CYN}X-> Create admin user...${NC}"

php artisan p:user:make






